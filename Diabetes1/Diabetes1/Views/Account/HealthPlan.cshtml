@using Diabetes1.Models
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using Diabetes1.Models;
@{
    ViewBag.Title = "HealthPlan";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ApplicationDbContext db = new ApplicationDbContext();
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>


@*///////////////////////////////////////////////////////////////////////////////////*@

    
    <div class="row">
        <div class="col-xs-6 ">
            <dl class="dl-horizontal">
                
                <dt>Add your blood sugar:</dt>
                <dd>
                 
                        <form action="/Account/AddGlycemic" method="post">
                           
                            <input name="value" />
                            <input type="submit" value="Add" class="btn btn-primary btn-sm"/>
                           
                        </form>
                   
                </dd>
                </dl>

                <canvas id="myChart" width="1000" height="200"></canvas>
</div>
       
        @*<div class="col-xs-6 col-md-4"></div>*@
    </div>
<br>


    <!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop -->
    <div class="row">
        <div class="col-xs-6 ">
            <dl class="dl-horizontal">

                @*<dt> Overall User BMR: </dt>*@

                <div class="panel panel-info">
                    <!-- Default panel contents -->
                    <div class="panel-heading"> <h4>BMI and BMR table</h4></div>

                    <!-- Table -->
                    <table class="table">
                        <tr>
                            <th>
                                <p>BMR(Basal metabolic rate):</p>
                            </th>
                            <th>
                       
<dd>
                    <p>
                        @{
                            if (Request.IsAuthenticated)
                            {
                                var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                                var currentUser = manager.FindById(User.Identity.GetUserId());
                                String BMR;
                                if (@currentUser.UserProfileInfo.Gender)
                                {

                                    double bmrm = Double.Parse(ViewData["BMRM"].ToString()); @bmrm
                                }
                                else {
                                    double bmrf = Double.Parse(ViewData["BMRF"].ToString()); @bmrf
                                }
                            }
                        }
                    </p>
                </dd>
                </th>
                </tr>

                <tr>
                    <th>
                        <p>BMI(Body mass index):</p>
                    </th>
                    <th>

                <dd>
                    <p>
                        @{ double bmi = Double.Parse(ViewData["BMI"].ToString()); @bmi }
                    </p>
                </dd>
                </th>
                </tr>

                    </table>
</div>
                 
                

        <div class="panel panel-info">
            <!-- Default panel contents -->
            <div class="panel-heading"> <h4>Value from nautrition plan</h4></div>

            <!-- Table -->
            <table class="table">
                <tr>
                    <th>
                        <p>Food Calories:</p>
                    </th>
                    <th>

                        <dd>
                            <p>
                                @{ double calories = Double.Parse(ViewData["Calories"].ToString()); @calories }
                            </p>
                        </dd>
                    </th>
                </tr>

                <tr>
                    <th>
                        <p>Glycemic index:</p>
                    </th>
                    <th>

                        <dd>
                            <p>
                                @{ double glycemic = Double.Parse(ViewData["Glycemic"].ToString()); @glycemic }
                            </p>
                        </dd>
                    </th>
                </tr>

            </table>
        </div>


                @*<dt> Overall Activity Calories:</dt>
                <dd>
                    <p>
                        @{ double caloriesA = Double.Parse(ViewData["caloriesA"].ToString()); @caloriesA }
                    </p>
                </dd>*@
             
</div>
       


        <div class="col-xs-6">

            <div class="panel panel-info">
                <!-- Default panel contents -->
                <div class="panel-heading"> <h4>BMI(Body mass index) Table</h4></div>

                <table class="table">
                    <tr>
                        <th>
                            <p>
                                <img src="~/img/BMIเช็คระดับ3.jpg"  width="550" height="200" class="img-thumbnail"></p>
                        </th>
                      </tr>  
                    </table>
            </div>
                

            </div>

       
<br>


<div class="row">
    <div class="col-xs-6 ">

        @* Add food *@
        <form action="/Account/AddFood" method="post">

            <select name="id" >
                <option>--Please choine list of food--</option>
                @{
                    List<Food> foods = (List<Food>)ViewData["Foods"];
                    foreach (var food in foods)
                    {
                        <option value="@food.id_food">@food.food_name</option>
                    }
                }
            </select>

            <input type="submit" value="Add to list" class="btn btn-primary"/>
            
        </form>
    </div>
    
    <div class="col-xs-6 ">
        <div class="col-lg-12">
            <center>
                <p> @Html.ActionLink("Exercises suggestion", "Suggestion", null, new { @class = "btn btn-info btn-lg" })</p>
                <p> @Html.ActionLink("Blood suggestion", "BloodSuggestion", null, new { @class = "btn btn-info btn-lg" })</p>
            </center>
        </div>

         @*Add Activity*@ 
        @*<form action="/Account/AddActivity" method="post">
            <select name="id">
                <option>---Activity---</option>
                @{
                    List<Activity> activities = (List<Activity>)ViewData["Activities"];
                    foreach (var activity in activities)
                    {
                        <option value="@activity.id_activity">@activity.activity_name</option>
                    }
                }
            </select>

            <input type="submit" value="Add Activity" />
        </form>

    </div>*@


    </div>



    <!-- Columns are always 50% wide, on mobile and desktop -->
    <div class="row">
        <div class="col-xs-6"><div>
    @* Delete food *@
                                  <div class="panel panel-info">
                                      <!-- Default panel contents -->
                                      <div class="panel-heading">Food Plan // Nutrition plan</div>
                                      
                                      
                                      <table class="table">
                                          <tr><th>List of food that selected</th></tr>
                                          @{
                                              List<UserFood> userFoods = (List<UserFood>)ViewData["UserFoods"];
                                          }
                                          @foreach (var ufood in userFoods)
                                          {

                                              var ofood = db.Foods.Find(ufood.FoodId);
                                              

                                              <tr>
                                                  <td>
                                                  
                                                  @ofood.food_name
                                                  
                                                  </td>


                                                  <td>
                                                      <form action="/Account/DeleteFood/" method="post">
                                                          <input type="hidden" name="id" value="@ufood.Id" />
                                                          <input type="submit" value="Delete" />
                                                      </form>
                                                  </td>



                                              </tr>




                                          }
                                      </table>
                                  </div>
</div></div>
        <div class="col-xs-6"><div>
    @* Delete activity *@
    @*<h1>Activities</h1>
    <div>
        <table>
            <tr><th>Name</th></tr>
            @{
                List<UserActivity> userActivities = (List<UserActivity>)ViewData["UserActivities"];
            }
            @if (userActivities != null)
            {
                foreach (var uact in userActivities)
                {
                    var oact = db.Activities.Find(uact.ActivityId);
                    <tr>
                        <td>@oact.activity_name</td>
                        <td>
                            <form action="/Account/DeleteActivity/" method="post">
                                <input type="hidden" name="id" value="@uact.Id" />
                                <input type="submit" value="Delete" />
                            </form>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>*@
</div></div>
    </div>
    
    
    @*///////////////////////////////////////////////////////////////////////////////////*@ 
    
    
    
    
    
    
    
    
    
     @* graph glycimic *@
    <script>
    @{
        List<UserGlycemic> glycemicList = (List<UserGlycemic>)ViewData["UserGlycemic"];
    }
        var data = [@{ for (int i = 0; i < glycemicList.Count;i++) { string result = '"' + glycemicList[i].Value.ToString() + '"'; @Html.Raw(result) if (i + 1 < glycemicList.Count) { @Html.Raw(",") } } }]
        var label = [@{ for (int i = 0; i < glycemicList.Count;i++) { string result = '"' + glycemicList[i].Date.ToShortDateString() + '"'; @Html.Raw(result) if (i + 1 < glycemicList.Count) { @Html.Raw(",") } } }]

        var ctx = document.getElementById("myChart").getContext("2d");
        var data = {
            labels: label,
            datasets: [
                {
                    label: "My First dataset",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: data
                },
            ]
        };
        var option = {
            scaleOverride: true,
            scaleSteps: 5,
            scaleStepWidth: 100,
            scaleStartValue: 0
        }
        var myNewChart = new Chart(ctx).Line(data, option);
    </script>
