@model Diabetes1.Models.IndexViewModel
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using Diabetes1.Models;
@{
    ViewBag.Title = "DisplayProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ApplicationDbContext db = new ApplicationDbContext();
}


@{
    ViewBag.Title = "Manage";
}



<p class="text-success">@ViewBag.StatusMessage</p>
<div class="row"><div class="col-md-3"></div>
    <div class="col-md-6">

        <h4>Patient Profile</h4>
        <hr />

        @using Microsoft.AspNet.Identity;
        @using Microsoft.AspNet.Identity.EntityFramework;
        @using Diabetes1.Models;


        <dl class="dl-horizontal">


            @{
                if (Request.IsAuthenticated)
                {
                    var manager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                    var currentUser = manager.FindById(User.Identity.GetUserId());
                    String gender;
                    if (@currentUser.UserProfileInfo.Gender)
                    {
                        gender = "Male";
                    }
                    else {
                        gender = "Female";
                    }

                    String diabetestype;
                    if (@currentUser.UserProfileInfo.DiabetesType)
                    {
                        diabetestype = "Diabetes type 1";
                    }
                    else {
                        diabetestype = "Diabetes type 2";
                    }

                    <dt> Name: </dt>
                    <dd>
                        <p>@currentUser.UserProfileInfo.FirstName @currentUser.UserProfileInfo.LastName</p>
                        <p> @Html.ActionLink("Edit user info", "EditUserProfile", "Account", null, new { @class = "btn btn-info " })</p>
                    </dd>
                    <dt>Gender:</dt>
                    <dd>
                        <p>
                            @gender

                        </p>
                    </dd>
                    <dt>Age:</dt>
                    <dd>
                        <p>
                            @currentUser.UserProfileInfo.Age
                        </p>
                    </dd>
                    <dt>Height:</dt>
                    <dd>
                        <p>
                            @currentUser.UserProfileInfo.Height
                        </p>
                    </dd>
                    <dt>Weight:</dt>
                    <dd>
                        <p>
                            @currentUser.UserProfileInfo.Weight
                        </p>
                    </dd>
                    <dt>Diabetes Type:</dt>
                                        <dd>
                                            <p>
                                                @diabetestype

                                            </p>
                                        </dd>
                        <dt>Address:</dt>
                            <dd>
                                <p>
                                    @currentUser.UserAddress.Address
                                </p>
                            </dd>

                            <dt>City:</dt>
                            <dd>
                                <p>
                                    @currentUser.UserAddress.City
                                </p>
                            </dd>
                            <dt>Zip code:</dt>
                            <dd>
                                <p>
                                    @currentUser.UserAddress.ZipCode
                                </p>
                            </dd>
                            <dt>Phone No.:</dt>
                            <dd><p>0882565644 </p></dd>
                            <dt>Add medicine:</dt>
                            <dd>
                                <p> @Html.ActionLink("Add list of medicine", "DisplayProfile", "Account", null, new { @class = "btn btn-info " })</p>
                            </dd>
                            <dt>List of medicine:</dt>
                            <dd>
                                <table>
                              @{
                             int id = currentUser.UserProfileInfo.id;
                             List<Medicine> userMedicine = (List<Medicine>)db.Medicines.Where(m => m.UserId == id).ToList();
                                 }
                                  @foreach (Medicine um in userMedicine)
                                  {
                                       //var om = db.Medicines.Find(um.Id);
                                      <tr>
                                      <td>- @um.MedicineName</td>

                                      </tr>
                                 }
                            </table>
                            
                            </dd>
                          
                            <dt>Blood sugar value:</dt>
                                <dd>
                                  <p>
                                        @{
                                            int id1 = currentUser.UserProfileInfo.id;
                                            List<UserGlycemic> userGlycemic = (List<UserGlycemic>)
                                db.UserGlycemics.Where(m => m.UserId == id1).OrderByDescending(d => d.Date).ToList();
                                        }
                                        @foreach (UserGlycemic ug in userGlycemic)
                                        {
                                            
                                             @ug.Value
                                            break;
                                        }
                                    </p>

                                </dd>


                            
                            
                            <dt>Start treatment:</dt>
                            <dd> @currentUser.UserProfileInfo.StartTreatment</dd>

                            <dt>Password:</dt>
                            <dd>
                                [
                                @if (Model.HasPassword)
                                {
                                    @Html.ActionLink("Change your password", "ChangePassword")
                                }
                                else
                                {
                                    @Html.ActionLink("Create", "SetPassword")
                                }
                                ]
                            </dd>



                }
            }
        </dl>




        <div class="col-md-12">

            <center>
                <div class="col-md-6"><a href="http://localhost:54941/Account/HealthPlan" class="btn btn-info" role="button"><img src="~/img/health plan.png" width="200" height="200" class="img-thumbnail"></a></div>
                <div class="col-md-6"><a href="http://localhost:54941/Account/Index" class="btn btn-info" role="button"><img src="~/img/today.png " width="200" height="200" class="img-thumbnail"></a></div>
            </center>
        </div>
    </div><div class="col-md-3"></div>

</div>
    <dl class="dl-horizontal">
       
        @*<dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>*@
        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.
             
             See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.
             
             Uncomment the following block after you have set up two-factor authentication
        *@
        @*  
            <dt>Phone Number:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None") [
                @if (Model.PhoneNumber != null)
                {
                    @Html.ActionLink("Change", "AddPhoneNumber")
                    @: &nbsp;|&nbsp;
                    @Html.ActionLink("Remove", "RemovePhoneNumber")
                }
                else
                {
                    @Html.ActionLink("Add", "AddPhoneNumber")
                }
                ]
            </dd>
        *@
        @*<dt>Two-Factor Authentication:</dt>
        <dd>
            <p>
                There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication.
            </p>*@
            @*@if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }*@
        </dd>
    </dl>
</div>
